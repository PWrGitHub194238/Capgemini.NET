#region Define

#region C#7.0 Matrix (char[][])
// #define _01_CSharp70_OLD_MATRIX_CHAR
#endregion C#7.0 Matrix (char[][])

#region C#8.0 Matrix (char[][])
#define _02_CSharp80_NEW_MATRIX_CHAR
#endregion C#8.0 Matrix (char[][])

#endregion Define

using _17.TargetTypedNewExpressions.Utils;

namespace _17.TargetTypedNewExpressions
{
    /* Execute-Example -ProjectName 17.TargetTypedNewExpressions -LangVersion 7.0 -DefineSection _01_CSharp70_OLD_MATRIX_CHAR
     *
     * Prints '
     * ######################################
     *
     *
     *                           ########
     *                           ########
     *                ####       ########
     *            #######################   E
     * S          ###########################
     * #####  ###############################
     * #####  ###############################
     * '.
     */

    #region C#7.0 Matrix (char[][])

#if _01_CSharp70_OLD_MATRIX_CHAR

    internal class Program
    {
        #region C#7.0 Matrix impl (char[][])

        private static void DrawMap(char[][] charMap)
        {
            PowerShellColors.WrapPowerShellColors();

            int mapHeight = charMap.Length;
            for (int i = 0; i < mapHeight; i += 1)
            {
                int mapWidth = charMap[i].Length;
                for (int j = 0; j < mapWidth; j += 1)
                {
                    ConsolColours.Write(charMap, i, j);
                }
                Colorful.Console.WriteLine();
            }
        }

        #endregion C#7.0 Matrix impl (char[][])

        private static void Main()
        {
            char[][] charMap = new char[][] {
                new char[] { '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' },
                new char[] { ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ' },
                new char[] { ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ' },
                new char[] { ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', '#', '#', '#', '#', '#', '#', '#', ' ', ' ', ' ', ' ' },
                new char[] { ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', '#', '#', '#', '#', '#', '#', '#', ' ', ' ', ' ', ' ' },
                new char[] { ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', '#', '#', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', '#', '#', '#', '#', '#', '#', '#', ' ', ' ', ' ', ' ' },
                new char[] { ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', ' ', ' ', ' ', 'E' },
                new char[] { 'S', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' },
                new char[] { '#', '#', '#', '#', '#', ' ', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' },
                new char[] { '#', '#', '#', '#', '#', ' ', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' }
            };

            DrawMap(charMap);
        }

        /* Expected output:
         *
         * ######################################
         *
         *
         *                           ########
         *                           ########
         *                ####       ########
         *            #######################   E
         * S          ###########################
         * #####  ###############################
         * #####  ###############################
         *
         */
    }

#endif

    #endregion C#7.0 Matrix (char[][])

    /* Execute-Example -ProjectName 17.TargetTypedNewExpressions -LangVersion 8.0 -DefineSection _02_CSharp80_NEW_MATRIX_CHAR
     *
     * Prints '
     * ######################################
     *
     *
     *                           ########
     *                           ########
     *                ####       ########
     *            #######################   E
     * S          ###########################
     * #####  ###############################
     * #####  ###############################
     * '.
     */

    #region C#8.0 Matrix (char[][])

#if _02_CSharp80_NEW_MATRIX_CHAR

    internal class Program
    {
    #region C#8.0 Matrix impl (char[][])

        private static void DrawMap(char[][] charMap)
        {
            PowerShellColors.WrapPowerShellColors();

            int mapHeight = charMap.Length;
            for (int i = 0; i < mapHeight; i += 1)
            {
                int mapWidth = charMap[i].Length;
                for (int j = 0; j < mapWidth; j += 1)
                {
                    ConsolColours.Write(charMap, i, j);
                }
                Colorful.Console.WriteLine();
            }
        }

    #endregion C#8.0 Matrix impl (char[][])

        private static void Main()
        {
            char[][] charMap = new char[][] {
                new [] { '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' },
                new [] { ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ' },
                new [] { ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ' },
                new [] { ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', '#', '#', '#', '#', '#', '#', '#', ' ', ' ', ' ', ' ' },
                new [] { ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', '#', '#', '#', '#', '#', '#', '#', ' ', ' ', ' ', ' ' },
                new [] { ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', '#', '#', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', '#', '#', '#', '#', '#', '#', '#', ' ', ' ', ' ', ' ' },
                new [] { ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', ' ', ' ', ' ', 'E' },
                new [] { 'S', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' },
                new [] { '#', '#', '#', '#', '#', ' ', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' },
                new [] { '#', '#', '#', '#', '#', ' ', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' }
            };

            DrawMap(charMap);
        }

        /* Expected output:
         *
         * ######################################
         *
         *
         *                           ########
         *                           ########
         *                ####       ########
         *            #######################   E
         * S          ###########################
         * #####  ###############################
         * #####  ###############################
         *
         */
    }

#endif

    #endregion C#8.0 Matrix (char[][])
}