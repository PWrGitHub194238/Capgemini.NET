<i class="@(IsActive ? ActiveCss : InActiveCss) @(Icon) cursor-pointer"
    alt="@IconRate"
    @onclick="@(() => ValueChanged.InvokeAsync(IconRate))"
    @onmouseover="@(() => OnMouseOver())"
    @onmouseout="@(() => OnMouseOut())"></i>

@code {
    [CascadingParameter]
    public RateContext Context { get; set; } = default!;

    [Parameter]
    public string Icon { get; set; } = "fa-star";

    [Parameter]
    public int IconRate { get; set; }

    [Parameter]
    public int Value { get; set; }

    [Parameter]
    public EventCallback<int> ValueChanged { get; set; }

    [Parameter]
    public string ActiveCss { get; set; } = "fas";

    [Parameter]
    public string InActiveCss { get; set; } = "far";

    private bool IsActive => (Context.IsFocused && IconRate <= Context.FocusedRateValue)
        || (!Context.IsFocused && IconRate <= Value);

    private void OnMouseOver()
    {
        Context.IsFocused = true;
        Context.FocusedRateValue = IconRate;
    }

    private void OnMouseOut() => Context.IsFocused = false;
}