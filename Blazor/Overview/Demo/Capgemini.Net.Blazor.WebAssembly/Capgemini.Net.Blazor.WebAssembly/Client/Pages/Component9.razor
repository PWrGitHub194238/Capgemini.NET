@page "/component9/{id:int}"

@inject HttpClient httpClient

@using Capgemini.Net.Blazor.Api.ViewModels
@using Capgemini.Net.Blazor.Components.Rate9.Interfaces
@using Capgemini.Net.Blazor.WebAssembly.Client.Adapters

@using Capgemini.Net.Blazor.Components.Rate9
@using Capgemini.Net.Blazor.Components.Rate9.ColoredAvg
@using Capgemini.Net.Blazor.Components.Rate9.ColoredCurrentRate

<Rate Product="@product"></Rate>

<Rate Product="@product">
    <CurrentRate>
        <ColoredCurrentRate Product="@context"></ColoredCurrentRate>
    </CurrentRate>
    <AvgRate>
        <ColoredAvg Product="@context"></ColoredAvg>
    </AvgRate>
</Rate>

<NavLink Match="NavLinkMatch.All" href="1">Product #1</NavLink>
<NavLink Match="NavLinkMatch.All" href="2">Product #2</NavLink>
<NavLink Match="NavLinkMatch.All" href="3">Product #3</NavLink>

@code {
    [Parameter]
    public int Id { get; set; }

    private IRateableProduct product = default!;

    protected override async Task OnInitializedAsync()
    {
        var rateableProductViewModel = await httpClient.GetFromJsonAsync<RateableProductViewModel>($"products/{Id}");

        if (rateableProductViewModel is not null)
        {
            product = new RateableProduct9Adapter(rateableProductViewModel);
        }
    }

}