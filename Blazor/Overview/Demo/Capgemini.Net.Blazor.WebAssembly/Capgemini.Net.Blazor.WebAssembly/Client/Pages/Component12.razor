@page "/component12/{id:int}"

@using Capgemini.Net.Blazor.Components.Rate12
@using Capgemini.Net.Blazor.Components.Rate12.ColoredAvg
@using Capgemini.Net.Blazor.Components.Rate12.ColoredCurrentRate
@using Capgemini.Net.Blazor.Components.Rate12.RateIcon

@*<Rate Product="@Product" ProductRated="ChangeProductRate">
        <ChildContent>
            <RateIcon Rate="1" Icon="fa-angry"></RateIcon>
            <RateIcon Rate="2" Icon="fa-sad-tear"></RateIcon>
            <RateIcon Rate="3" Icon="fa-meh-blank"></RateIcon>
            <RateIcon Rate="4" Icon="fa-smile-beam"></RateIcon>
            <RateIcon Rate="5" Icon="fa-grin-stars"></RateIcon>
        </ChildContent>
        <CurrentRate>
            <ColoredCurrentRate Product="@context"></ColoredCurrentRate>
        </CurrentRate>
        <AvgRate>
            <ColoredAvg Product="@context"></ColoredAvg>
        </AvgRate>
    </Rate>*@

<Rate Product="@Product" ProductRated="ChangeProductRate">
    <ChildContent Context="Product">
        @foreach (int i in Enumerable.Range(Product.MinRate - 1, Product.MaxRate - Product.MinRate + 1))
        {
            <RateIcon Rate="@i" Icon="@GetRateIcon(@i, Product.MaxRate - Product.MinRate)"></RateIcon>
        }
    </ChildContent>
    <CurrentRate>
        <ColoredCurrentRate Product="@context"></ColoredCurrentRate>
    </CurrentRate>
    <AvgRate>
        <ColoredAvg Product="@context"></ColoredAvg>
    </AvgRate>
</Rate>

@*@for (int i = 0; i < 8; i += 1)
{
    <NavLink Match="NavLinkMatch.All" href="@i">Product #@i</NavLink>
}*@

@for (int i = 0; i < 8; i += 1)
{
    int index = i;
    <NavLink Match="NavLinkMatch.All" href="@index">Product #@index</NavLink>
}