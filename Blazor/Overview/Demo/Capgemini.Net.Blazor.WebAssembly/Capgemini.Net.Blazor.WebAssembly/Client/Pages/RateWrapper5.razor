<EditForm Model="@rateContext1">
    <div class="form-group row mb-1">
        <label class="col-3 col-form-label"
               for="Birthday">MaxRate:</label>
        <div class="col-9">
            <InputNumber class="form-control" @bind-Value="@rateContext.MaxRate" />
        </div>
    </div>

    <div class="form-group row mb-1">
        <label class="col-3 col-form-label"
               for="Birthday">Icon:</label>
        <div class="col-9">
            <InputSelect @bind-Value="rateContext.Icon" class="form-control">
                <option value="">Select icon ...</option>
                @foreach (string icon in icons)
                {
                    <option value="@icon">@icon</option>
                }
            </InputSelect>
        </div>
    </div>

    <div class="form-group row mb-1">
        <label class="col-3 col-form-label"
               for="Birthday">AvgRate:</label>
        <div class="col-9">
            <InputNumber class="form-control" @bind-Value="@rateContext.AvgRate" />
        </div>
    </div>
</EditForm>

<CascadingValue Value="@rateContext">
    @ChildContent
</CascadingValue>

@code {
    [Parameter]
    public RenderFragment ChildContent { get; set; } = default!;

    private RateContext rateContext = default!;

    private RateContext rateContext1 = new RateContext();

    private string[] icons = new[] { "fa-grin-stars", "fa-angry", "fa-star", "fa-sun" };

    protected override Task OnInitializedAsync()
    {
        rateContext = new RateContext
        {
            MaxRate = 5,
            Icon = "fa-star",
            AvgRate = 4,
        };

        return base.OnInitializedAsync();
    }

}
