<div>
    <button @onclick="@(() => maxRate = Math.Max(2, maxRate - 1))">-</button>
    <div>
        <span>Max rate</span>
        <strong>(@maxRate)</strong>
    </div>
    <button @onclick="@(() => maxRate += 1)">+</button>
</div>

<div>
    <button @onclick="@(() => iconIndex = iconIndex == 0 ? icons.Length - 1 : iconIndex - 1)">-</button>
    <div>
        <span>Icon</span>
        <strong>
            <span>(@icons[iconIndex] - </span>
            <i class="far @icons[iconIndex]"></i>
            <span>
                )
            </span>
        </strong>
    </div>
    <button @onclick="@(() => iconIndex = (iconIndex + 1) % icons.Length)">+</button>
</div>


<CascadingValue Name="MaxRate" Value="@maxRate">
    <CascadingValue Value="@icons[iconIndex]">
        @ChildContent
    </CascadingValue>
</CascadingValue>

@code {
    [Parameter]
    public RenderFragment ChildContent { get; set; } = default!;

    private int maxRate = 6;

    private string[] icons = new[] { "fa-grin-stars", "fa-angry", "fa-star", "fa-sun" };

    private int iconIndex = 0;
}
